// <auto-generated />
using System;
using AutoServiceBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921152730_AddUserPostProductTables")]
    partial class AddUserPostProductTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend_EAD.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Welcome to our platform!",
                            CreatedAt = new DateTime(2025, 9, 21, 15, 27, 24, 715, DateTimeKind.Utc).AddTicks(1376),
                            IsActive = true,
                            Title = "Welcome Post",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Here's how to get started...",
                            CreatedAt = new DateTime(2025, 9, 21, 15, 27, 24, 715, DateTimeKind.Utc).AddTicks(3020),
                            IsActive = true,
                            Title = "Getting Started",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("backend_EAD.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 21, 15, 27, 24, 714, DateTimeKind.Utc).AddTicks(2417),
                            Description = "High-performance laptop",
                            IsActive = true,
                            Name = "Laptop",
                            Price = 999.99m,
                            Stock = 10,
                            UpdatedAt = new DateTime(2025, 9, 21, 15, 27, 24, 714, DateTimeKind.Utc).AddTicks(3143)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 21, 15, 27, 24, 714, DateTimeKind.Utc).AddTicks(4475),
                            Description = "Wireless mouse",
                            IsActive = true,
                            Name = "Mouse",
                            Price = 29.99m,
                            Stock = 50,
                            UpdatedAt = new DateTime(2025, 9, 21, 15, 27, 24, 714, DateTimeKind.Utc).AddTicks(4477)
                        });
                });

            modelBuilder.Entity("backend_EAD.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 21, 15, 27, 24, 710, DateTimeKind.Utc).AddTicks(6100),
                            Email = "john@example.com",
                            IsActive = true,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 21, 15, 27, 24, 710, DateTimeKind.Utc).AddTicks(7449),
                            Email = "jane@example.com",
                            IsActive = true,
                            Name = "Jane Smith"
                        });
                });

            modelBuilder.Entity("backend_EAD.Models.Post", b =>
                {
                    b.HasOne("backend_EAD.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
